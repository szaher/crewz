global:
  scrape_interval: 30s
  scrape_timeout: 10s
  evaluation_interval: 30s
  external_labels:
    cluster: crewai-platform
    environment: production

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

  # Backend API metrics
  - job_name: 'crewai-backend'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - crewai-platform
        - crewai-staging
        - crewai-prod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app]
      regex: crewai-backend
      action: keep
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      regex: true
      action: keep
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
      regex: (.+)
      target_label: __address__
      replacement: ${1}:${2}
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      regex: (.+)
      target_label: __metrics_path__
    - source_labels: [__meta_kubernetes_namespace]
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      target_label: pod
    - source_labels: [__meta_kubernetes_pod_label_component]
      target_label: component

  # Frontend metrics (if exposed)
  - job_name: 'crewai-frontend'
    kubernetes_sd_configs:
    - role: pod
      namespaces:
        names:
        - crewai-platform
        - crewai-staging
        - crewai-prod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app]
      regex: crewai-frontend
      action: keep
    - source_labels: [__meta_kubernetes_namespace]
      target_label: namespace
    - source_labels: [__meta_kubernetes_pod_name]
      target_label: pod

  # PostgreSQL metrics (using postgres_exporter)
  - job_name: 'postgres'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - crewai-platform
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_app]
      regex: postgres
      action: keep
    - source_labels: [__meta_kubernetes_service_name]
      target_label: service
    - source_labels: [__meta_kubernetes_namespace]
      target_label: namespace
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: 'pg_.*'
      action: keep

  # MongoDB metrics (using mongodb_exporter)
  - job_name: 'mongodb'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - crewai-platform
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_app]
      regex: mongodb
      action: keep
    - source_labels: [__meta_kubernetes_service_name]
      target_label: service
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: 'mongodb_.*'
      action: keep

  # Redis metrics (using redis_exporter)
  - job_name: 'redis'
    kubernetes_sd_configs:
    - role: service
      namespaces:
        names:
        - crewai-platform
    relabel_configs:
    - source_labels: [__meta_kubernetes_service_label_app]
      regex: redis
      action: keep
    - source_labels: [__meta_kubernetes_service_name]
      target_label: service

  # Kubernetes API server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      regex: default;kubernetes;https
      action: keep

  # Kubernetes nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)

  # Kubernetes pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      regex: true
      action: keep
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      regex: (.+)
      target_label: __metrics_path__
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      target_label: kubernetes_pod_name

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention:
      time: 30d
      size: 50GB

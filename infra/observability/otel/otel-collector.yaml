receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver for scraping metrics
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 30s
        static_configs:
        - targets: ['localhost:8888']

processors:
  # Batch processor for better performance
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Resource processor to add additional attributes
  resource:
    attributes:
    - key: deployment.environment
      value: production
      action: upsert
    - key: service.namespace
      value: crewai
      action: upsert

  # Attributes processor for span attributes
  attributes:
    actions:
    - key: http.user_agent
      action: delete
    - key: http.client_ip
      action: hash

  # Span processor for filtering
  span:
    name:
      to_attributes:
        rules:
        - ^\/api\/v1\/(?P<endpoint>.*)$

  # Probabilistic sampler (sample 10% of traces)
  probabilistic_sampler:
    sampling_percentage: 10

exporters:
  # Prometheus exporter
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: crewai
    const_labels:
      environment: production

  # Jaeger exporter for tracing
  jaeger:
    endpoint: jaeger-collector:14250
    tls:
      insecure: true

  # OTLP exporter (for sending to another collector or backend)
  otlp:
    endpoint: otlp-backend:4317
    tls:
      insecure: true

  # Logging exporter (for debugging)
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  # File exporter for backup
  file:
    path: /var/log/otel/traces.json

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133

  # pprof extension for profiling
  pprof:
    endpoint: 0.0.0.0:1777

  # zpages extension for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]

  pipelines:
    # Traces pipeline
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes, span, probabilistic_sampler]
      exporters: [jaeger, logging]

    # Metrics pipeline
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]

    # Logs pipeline
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging, file]

  telemetry:
    logs:
      level: info
    metrics:
      address: 0.0.0.0:8888

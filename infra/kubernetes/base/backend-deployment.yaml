apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: crewai-backend
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: crewai-backend
  template:
    metadata:
      labels:
        app: crewai-backend
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: backend-sa
      containers:
      - name: backend
        image: crewai-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Database Configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: postgres-url
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: mongodb-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: redis-url

        # Application Configuration
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"

        # Security
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: encryption-key

        # CORS Configuration
        - name: FRONTEND_URL
          value: "https://app.crewai-platform.com"
        - name: ALLOWED_ORIGINS
          value: "https://app.crewai-platform.com,https://staging.crewai-platform.com"
        - name: ALLOWED_ORIGIN_REGEX
          value: "^https?://.*$"
        - name: ALLOW_ALL_ORIGINS
          value: "false"

        # Observability
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "crewai-backend"

        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs

      # Sidecar for log shipping (optional)
      - name: fluentd
        image: fluent/fluentd:v1.16-1
        volumeMounts:
        - name: logs
          mountPath: /app/logs
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc

      volumes:
      - name: config
        configMap:
          name: backend-config
      - name: logs
        emptyDir: {}
      - name: fluentd-config
        configMap:
          name: fluentd-config

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - crewai-backend
              topologyKey: kubernetes.io/hostname

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  labels:
    app: crewai-backend

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  labels:
    app: crewai-backend
data:
  app.yaml: |
    server:
      host: 0.0.0.0
      port: 8000
      workers: 4

    database:
      pool_size: 20
      max_overflow: 10
      pool_timeout: 30
      pool_recycle: 3600

    cache:
      ttl: 300
      max_size: 1000

    rate_limiting:
      enabled: true
      requests_per_minute: 60
      burst: 10

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: crewai-backend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

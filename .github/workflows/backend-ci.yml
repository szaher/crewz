name: Backend CI

on:
  push:
    branches: [main, develop, 'feature/*']
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: crewai_test
          POSTGRES_USER: crewai_test
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: crewai_test
          MONGO_INITDB_ROOT_PASSWORD: test_password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: backend/requirements*.txt

    - name: Install dependencies
      run: |
        cd backend
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://crewai_test:test_password@localhost:5432/crewai_test
      run: |
        cd backend
        alembic upgrade head

    - name: Run linting
      run: |
        cd backend
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run type checking
      run: |
        cd backend
        mypy src/ --ignore-missing-imports

    - name: Run unit tests
      env:
        DATABASE_URL: postgresql://crewai_test:test_password@localhost:5432/crewai_test
        MONGODB_URL: mongodb://crewai_test:test_password@localhost:27017/crewai_test
        REDIS_URL: redis://localhost:6379/0
        JWT_SECRET: test-secret-key
        ENCRYPTION_KEY: test-encryption-key-32-bytes-long
      run: |
        cd backend
        pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term

    - name: Run integration tests
      env:
        DATABASE_URL: postgresql://crewai_test:test_password@localhost:5432/crewai_test
        MONGODB_URL: mongodb://crewai_test:test_password@localhost:27017/crewai_test
        REDIS_URL: redis://localhost:6379/0
        JWT_SECRET: test-secret-key
        ENCRYPTION_KEY: test-encryption-key-32-bytes-long
      run: |
        cd backend
        pytest tests/integration/ -v --cov=src --cov-append --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

    - name: Check code formatting
      run: |
        cd backend
        black --check src/ tests/

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Bandit security scanner
      run: |
        pip install bandit
        cd backend
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Run Safety check
      run: |
        pip install safety
        cd backend
        safety check --json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: backend/bandit-report.json
